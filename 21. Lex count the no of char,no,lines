21.Write a LEX specification file to take input C program from a .c file and count tthe 
number of characters, number of lines & number of words.

sample21.c 

#include<stdio.h>
int main(){    
	int number1,number2,sum;
	printf("Enter two integers: ");
	scanf("%d%d",&number1,&number2);
	sum=number1+number2;
	printf("%d+%d=%d",number1,number2,sum);
	return 0;
}

counr_line.l

%{
#include <stdio.h>

// Global variables to store the counts
int nchar = 0;  // Number of characters
int nword = 0;  // Number of words
int nline = 0;  // Number of lines
%}

%%

\n          { nline++; nchar++; }  // Increment line and character count on newline
[^ \t\n]+   { nword++; nchar += yyleng; }  // Increment word count and character count for non-whitespace sequences
.           { nchar++; }  // Increment character count for any other character

%%

int yywrap(void) {
    return 1;  // Indicate end of input
}

int main(int argc, char *argv[]) {
    if (argc < 2) {
        fprintf(stderr, "Usage: %s <filename>\n", argv[0]);
        return 1;
    }

    // Open the input file
    yyin = fopen(argv[1], "r");
    if (!yyin) {
        perror("Error opening file");
        return 1;
    }

    // Start the lexer
    yylex();

    // Print the results
    printf("Number of characters = %d\n", nchar);
    printf("Number of words = %d\n", nword);
    printf("Number of lines = %d\n", nline);

    // Close the file
    fclose(yyin);

    return 0;
}

output
flex count_line.l
gcc lex.yy.c
a.exe sample21.c
